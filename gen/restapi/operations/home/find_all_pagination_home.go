// Code generated by go-swagger; DO NOT EDIT.

package home

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// FindAllPaginationHomeHandlerFunc turns a function with the right signature into a find all pagination home handler
type FindAllPaginationHomeHandlerFunc func(FindAllPaginationHomeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FindAllPaginationHomeHandlerFunc) Handle(params FindAllPaginationHomeParams) middleware.Responder {
	return fn(params)
}

// FindAllPaginationHomeHandler interface for that can handle valid find all pagination home params
type FindAllPaginationHomeHandler interface {
	Handle(FindAllPaginationHomeParams) middleware.Responder
}

// NewFindAllPaginationHome creates a new http.Handler for the find all pagination home operation
func NewFindAllPaginationHome(ctx *middleware.Context, handler FindAllPaginationHomeHandler) *FindAllPaginationHome {
	return &FindAllPaginationHome{Context: ctx, Handler: handler}
}

/*
	FindAllPaginationHome swagger:route GET /v1/home home findAllPaginationHome

# Find All Pagination

Find all home data with pagination
*/
type FindAllPaginationHome struct {
	Context *middleware.Context
	Handler FindAllPaginationHomeHandler
}

func (o *FindAllPaginationHome) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewFindAllPaginationHomeParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
