// Code generated by go-swagger; DO NOT EDIT.

package home

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// FindOneHomeHandlerFunc turns a function with the right signature into a find one home handler
type FindOneHomeHandlerFunc func(FindOneHomeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FindOneHomeHandlerFunc) Handle(params FindOneHomeParams) middleware.Responder {
	return fn(params)
}

// FindOneHomeHandler interface for that can handle valid find one home params
type FindOneHomeHandler interface {
	Handle(FindOneHomeParams) middleware.Responder
}

// NewFindOneHome creates a new http.Handler for the find one home operation
func NewFindOneHome(ctx *middleware.Context, handler FindOneHomeHandler) *FindOneHome {
	return &FindOneHome{Context: ctx, Handler: handler}
}

/*
	FindOneHome swagger:route GET /v1/home/{home_id} home findOneHome

# Find One

Find one home data
*/
type FindOneHome struct {
	Context *middleware.Context
	Handler FindOneHomeHandler
}

func (o *FindOneHome) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewFindOneHomeParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
