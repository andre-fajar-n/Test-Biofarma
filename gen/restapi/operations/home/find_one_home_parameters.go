// Code generated by go-swagger; DO NOT EDIT.

package home

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewFindOneHomeParams creates a new FindOneHomeParams object
// with the default values initialized.
func NewFindOneHomeParams() FindOneHomeParams {

	var (
		// initialize parameters with default values

		includeDeletedDataDefault = string("false")
	)

	return FindOneHomeParams{
		IncludeDeletedData: &includeDeletedDataDefault,
	}
}

// FindOneHomeParams contains all the bound params for the find one home operation
// typically these are obtained from a http.Request
//
// swagger:parameters FindOneHome
type FindOneHomeParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  Required: true
	  In: path
	*/
	HomeID uint64
	/*flag for identify include deleted data or not
	  In: query
	  Default: "false"
	*/
	IncludeDeletedData *string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewFindOneHomeParams() beforehand.
func (o *FindOneHomeParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	rHomeID, rhkHomeID, _ := route.Params.GetOK("home_id")
	if err := o.bindHomeID(rHomeID, rhkHomeID, route.Formats); err != nil {
		res = append(res, err)
	}

	qIncludeDeletedData, qhkIncludeDeletedData, _ := qs.GetOK("include_deleted_data")
	if err := o.bindIncludeDeletedData(qIncludeDeletedData, qhkIncludeDeletedData, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindHomeID binds and validates parameter HomeID from path.
func (o *FindOneHomeParams) bindHomeID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	value, err := swag.ConvertUint64(raw)
	if err != nil {
		return errors.InvalidType("home_id", "path", "uint64", raw)
	}
	o.HomeID = value

	return nil
}

// bindIncludeDeletedData binds and validates parameter IncludeDeletedData from query.
func (o *FindOneHomeParams) bindIncludeDeletedData(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: false
	// AllowEmptyValue: false

	if raw == "" { // empty values pass all other validations
		// Default values have been previously initialized by NewFindOneHomeParams()
		return nil
	}
	o.IncludeDeletedData = &raw

	if err := o.validateIncludeDeletedData(formats); err != nil {
		return err
	}

	return nil
}

// validateIncludeDeletedData carries on validations for parameter IncludeDeletedData
func (o *FindOneHomeParams) validateIncludeDeletedData(formats strfmt.Registry) error {

	if err := validate.EnumCase("include_deleted_data", "query", *o.IncludeDeletedData, []interface{}{"true", "false"}, true); err != nil {
		return err
	}

	return nil
}
