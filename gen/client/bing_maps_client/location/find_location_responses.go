// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"biofarma/gen/models"
)

// FindLocationReader is a Reader for the FindLocation structure.
type FindLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewFindLocationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFindLocationOK creates a FindLocationOK with default headers values
func NewFindLocationOK() *FindLocationOK {
	return &FindLocationOK{}
}

/*
FindLocationOK describes a response with status code 200, with default header values.

Success get data
*/
type FindLocationOK struct {
	Payload *models.SuccessGetLocation
}

// IsSuccess returns true when this find location o k response has a 2xx status code
func (o *FindLocationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this find location o k response has a 3xx status code
func (o *FindLocationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find location o k response has a 4xx status code
func (o *FindLocationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this find location o k response has a 5xx status code
func (o *FindLocationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this find location o k response a status code equal to that given
func (o *FindLocationOK) IsCode(code int) bool {
	return code == 200
}

func (o *FindLocationOK) Error() string {
	return fmt.Sprintf("[GET /v1/Locations][%d] findLocationOK  %+v", 200, o.Payload)
}

func (o *FindLocationOK) String() string {
	return fmt.Sprintf("[GET /v1/Locations][%d] findLocationOK  %+v", 200, o.Payload)
}

func (o *FindLocationOK) GetPayload() *models.SuccessGetLocation {
	return o.Payload
}

func (o *FindLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessGetLocation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindLocationDefault creates a FindLocationDefault with default headers values
func NewFindLocationDefault(code int) *FindLocationDefault {
	return &FindLocationDefault{
		_statusCode: code,
	}
}

/*
FindLocationDefault describes a response with status code -1, with default header values.

Server Error
*/
type FindLocationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the find location default response
func (o *FindLocationDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this find location default response has a 2xx status code
func (o *FindLocationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this find location default response has a 3xx status code
func (o *FindLocationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this find location default response has a 4xx status code
func (o *FindLocationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this find location default response has a 5xx status code
func (o *FindLocationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this find location default response a status code equal to that given
func (o *FindLocationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *FindLocationDefault) Error() string {
	return fmt.Sprintf("[GET /v1/Locations][%d] findLocation default  %+v", o._statusCode, o.Payload)
}

func (o *FindLocationDefault) String() string {
	return fmt.Sprintf("[GET /v1/Locations][%d] findLocation default  %+v", o._statusCode, o.Payload)
}

func (o *FindLocationDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *FindLocationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
