// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SuccessGetLocationResourceSetsItemsResourcesItemsAddress success get location resource sets items resources items address
//
// swagger:model successGetLocationResourceSetsItemsResourcesItemsAddress
type SuccessGetLocationResourceSetsItemsResourcesItemsAddress struct {

	// address line
	AddressLine string `json:"addressLine,omitempty"`

	// admin district
	AdminDistrict string `json:"adminDistrict,omitempty"`

	// admin district2
	AdminDistrict2 string `json:"adminDistrict2,omitempty"`

	// country region
	CountryRegion string `json:"countryRegion,omitempty"`

	// formatted address
	FormattedAddress string `json:"formattedAddress,omitempty"`

	// locality
	Locality string `json:"locality,omitempty"`

	// postal code
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this success get location resource sets items resources items address
func (m *SuccessGetLocationResourceSetsItemsResourcesItemsAddress) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this success get location resource sets items resources items address based on context it is used
func (m *SuccessGetLocationResourceSetsItemsResourcesItemsAddress) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SuccessGetLocationResourceSetsItemsResourcesItemsAddress) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SuccessGetLocationResourceSetsItemsResourcesItemsAddress) UnmarshalBinary(b []byte) error {
	var res SuccessGetLocationResourceSetsItemsResourcesItemsAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
